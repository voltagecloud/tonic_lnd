/// Messages and other types generated by `tonic`/`prost`
///
/// This is the go-to module you will need to look in to find documentation on various message
/// types. However it may be better to start from methods on the [`LightningClient`](lnrpc::lightning_client::LightningClient) type.
#[cfg(feature = "lightningrpc")]
pub mod lnrpc {
    tonic::include_proto!("lnrpc");
}

#[cfg(feature = "walletrpc")]
pub mod walletrpc {
    tonic::include_proto!("walletrpc");
}

#[cfg(feature = "signrpc")]
pub mod signrpc {
    tonic::include_proto!("signrpc");
}

#[cfg(feature = "peersrpc")]
pub mod peersrpc {
    tonic::include_proto!("peersrpc");
}

#[cfg(feature = "routerrpc")]
pub mod routerrpc {
    tonic::include_proto!("routerrpc");
}

#[cfg(feature = "versionrpc")]
pub mod verrpc {
    tonic::include_proto!("verrpc");
}

#[cfg(feature = "invoicesrpc")]
pub mod invoicesrpc {
    tonic::include_proto!("invoicesrpc");
}

#[cfg(feature = "taprpc")]
pub mod taprpc {
    tonic::include_proto!("taprpc");
}

#[cfg(feature = "assetwalletrpc")]
pub mod assetwalletrpc {
    tonic::include_proto!("assetwalletrpc");
}

#[cfg(feature = "mintrpc")]
pub mod mintrpc {
    tonic::include_proto!("mintrpc");
}

#[cfg(feature = "priceoraclerpc")]
pub mod priceoraclerpc {
    tonic::include_proto!("priceoraclerpc");
}

#[cfg(feature = "rfqrpc")]
pub mod rfqrpc {
    tonic::include_proto!("rfqrpc");
}

#[cfg(feature = "tapchannelrpc")]
pub mod tapchannelrpc {
    tonic::include_proto!("tapchannelrpc");
}

#[cfg(feature = "tapdevrpc")]
pub mod tapdevrpc {
    tonic::include_proto!("tapdevrpc");
}

#[cfg(feature = "universerpc")]
pub mod universerpc {
    tonic::include_proto!("universerpc");
}
